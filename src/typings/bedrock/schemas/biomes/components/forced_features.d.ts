/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The order in which coordinates will be evaluated. Should be used when a coordinate depends on another. If omitted, defaults to `xzy`.
 */
export type CoordinateEvalOrder = "xyz" | "xzy" | "yxz" | "yzx" | "zxy" | "zyx";
/**
 * UNDOCUMENTED.
 */
export type Identifier = string;
/**
 * Number of scattered positions to generate.
 */
export type Iterations = string | number;
/**
 * UNDOCUMENTED.
 */
export type PlacesFeature = string;
export type ScatterChance =
  | {
      denominator?: Denominator;
      numerator?: Numerator;
    }
  | MolangNumber
  | number;
/**
 * UNDOCUMENTED.
 */
export type Denominator = number;
/**
 * UNDOCUMENTED.
 */
export type Numerator = number;
/**
 * Probability (0-100) that this scatter will occur.  Not evaluated each iteration; either no iterations will run, or all will.
 */
export type MolangNumber = MolangNumber1 & MolangNumber2;
export type MolangNumber1 = string | number;
export type MolangNumber2 = string;
export type X =
  | MolangNumber3
  | number
  | {
      distribution: Distribution;
      extent: Extent;
      grid_offset?: StepSize;
      step_size?: StepSize1;
    };
/**
 * Expression for the coordinate (evaluated each iteration).  Mutually exclusive with random distribution object below.
 */
export type MolangNumber3 = MolangNumber4 & MolangNumber5;
export type MolangNumber4 = string | number;
export type MolangNumber5 = string;
/**
 * Type of distribution - uniform random, gaussian (centered in the range), or grid (either fixed-step or jittered).
 */
export type Distribution = "uniform" | "gaussian" | "inverse_gaussian" | "triangle" | "fixed_grid" | "jittered_grid";
/**
 * UNDOCUMENTED.
 */
export type Extent = [] | [LowerBound] | [LowerBound, UpperBound];
/**
 * Lower bound (inclusive) of the scatter range, as an offset from the input point to scatter around.
 */
export type LowerBound = string | number;
/**
 * Upper bound (inclusive) of the scatter range, as an offset from the input point to scatter around.
 */
export type UpperBound = string | number;
/**
 * When the distribution type is grid, defines the offset along this axis.
 */
export type StepSize = number;
/**
 * When the distribution type is grid, defines the distance between steps along this axis.
 */
export type StepSize1 = number;
export type X1 =
  | MolangNumber6
  | number
  | {
      distribution: Distribution;
      extent: Extent;
      grid_offset?: StepSize;
      step_size?: StepSize1;
    };
export type MolangNumber6 = MolangNumber4 & MolangNumber5;
export type X2 =
  | MolangNumber7
  | number
  | {
      distribution: Distribution;
      extent: Extent;
      grid_offset?: StepSize;
      step_size?: StepSize1;
    };
export type MolangNumber7 = MolangNumber4 & MolangNumber5;
/**
 * UNDOCUMENTED.
 */
export type FirstPass = Iteration[];
/**
 * UNDOCUMENTED.
 */
export type FirstPass1 = Iteration[];
/**
 * UNDOCUMENTED.
 */
export type FirstPass2 = Iteration[];
/**
 * UNDOCUMENTED.
 */
export type FirstPass3 = Iteration[];
/**
 * UNDOCUMENTED.
 */
export type FirstPass4 = Iteration[];
/**
 * UNDOCUMENTED.
 */
export type FirstPass5 = Iteration[];
/**
 * UNDOCUMENTED.
 */
export type FirstPass6 = Iteration[];
/**
 * UNDOCUMENTED.
 */
export type FirstPass7 = Iteration[];
/**
 * UNDOCUMENTED.
 */
export type FirstPass8 = Iteration[];
/**
 * UNDOCUMENTED.
 */
export type FirstPass9 = Iteration[];
/**
 * UNDOCUMENTED.
 */
export type FirstPass10 = Iteration[];

/**
 * Force specific decorative features (trees, plants, etc.) to appear in this Biome, regardless of normal decoration rules.
 */
export interface ForcedFeatures {
  after_sky_pass?: FirstPass;
  after_surface_pass?: FirstPass1;
  after_underground_pass?: FirstPass2;
  before_sky_pass?: FirstPass3;
  before_surface_pass?: FirstPass4;
  before_underground_pass?: FirstPass5;
  final_pass?: FirstPass6;
  first_pass?: FirstPass7;
  surface_pass?: FirstPass8;
  sky_pass?: FirstPass9;
  underground_pass?: FirstPass10;
}
/**
 * UNDOCUMENTED.
 */
export interface Iteration {
  coordinate_eval_order?: CoordinateEvalOrder;
  identifier: Identifier;
  iterations: Iterations;
  places_feature: PlacesFeature;
  scatter_chance?: ScatterChance;
  x?: X;
  y?: X1;
  z?: X2;
}
