/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The offset from the block's center.
 */
export type BlockOffset = [] | [X] | [X, Y] | [X, Y, Z];
/**
 * The x offset from the block's center.
 */
export type X = number;
/**
 * The y offset from the block's center.
 */
export type Y = number;
/**
 * The z offset from the block's center.
 */
export type Z = number;
/**
 * The type of block to set.
 */
export type BlockType = BlockIdentifier | BlockReference;
/**
 * A minecraft block identifier.
 */
export type BlockIdentifier = string;
/**
 * A minecraft block identifier.
 */
export type BlockIdentifier1 = string;
/**
 * The key of property is the name of the block state/property, the value must be the same as the block properties accepted values.
 */
export type StateValue = boolean | number | string;
/**
 * A condition using Molang queries that results to true/false that can be used to query for blocks with certain tags.
 */
export type Molang = string;

/**
 * Sets a block relative to this block to another block type.
 */
export interface SetBlockAtPos {
  block_offset?: BlockOffset;
  block_type?: BlockType;
}
export interface BlockReference {
  name?: BlockIdentifier1;
  states?: States;
  tags?: Molang;
}
export interface States {
  [k: string]: StateValue;
}
