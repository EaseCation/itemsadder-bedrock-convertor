/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Returns true when the subject entity receives the named damage type.
 */
export type TestProperty = string;
/**
 * The comparison to apply with `value`.
 */
export type Operator = "!=" | "<" | "<=" | "<>" | "=" | "==" | ">" | ">=" | "equals" | "not";
/**
 * The subject of this filter test.
 */
export type Subject = "block" | "other" | "parent" | "player" | "self" | "target" | "damager";
/**
 * The Damage type to test.
 */
export type Value =
  | "all"
  | "anvil"
  | "block_explosion"
  | "campfire"
  | "charging"
  | "contact"
  | "drowning"
  | "entity_attack"
  | "entity_explosion"
  | "fall"
  | "falling_block"
  | "fatal"
  | "fire"
  | "fire_tick"
  | "fireworks"
  | "fly_into_wall"
  | "freezing"
  | "lava"
  | "lightning"
  | "magic"
  | "magma"
  | "none"
  | "override"
  | "piston"
  | "projectile"
  | "ram_attack"
  | "sonic_boom"
  | "soul_campfire"
  | "stalactite"
  | "stalagmite"
  | "starve"
  | "suffocation"
  | "suicide"
  | "temperature"
  | "thorns"
  | "void"
  | "wither";

/**
 * Returns true when the subject entity receives the named damage type. has_damage can also use subject and operator parameters but they are optional.
 */
export interface HasDamage {
  test?: TestProperty;
  operator?: Operator;
  subject?: Subject;
  value: Value;
  [k: string]: unknown;
}
