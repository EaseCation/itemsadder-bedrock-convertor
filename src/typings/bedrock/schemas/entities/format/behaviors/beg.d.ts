/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * How important this behavior is. Lower priority behaviors will be executed first.
 */
export type Priority = number;
/**
 * List of items that this mob likes.
 */
export type Properties1 = Properties2 & Properties3;
export type Properties2 =
  | ItemIdentifier
  | ItemDescriptor
  | {
      item?: ItemIdentifier1 | ItemDescriptor1;
      [k: string]: unknown;
    };
/**
 * A minecraft item identifier.
 */
export type ItemIdentifier = string;
/**
 * [UNDOCUMENTED] A Molang expression ran against item or block to match.
 */
export type Molang = string;
/**
 * A minecraft item identifier.
 */
export type ItemIdentifier1 = string;
export type Properties3 = string;
/**
 * List of items that this mob likes.
 */
export type Properties = Properties1[];
/**
 * Distance in blocks the mob will beg from.
 */
export type LookDistance = number;
/**
 * The range of time in seconds this mob will stare at the player holding a food they like, begging for it.
 */
export type LookTime =
  | number
  | []
  | [A]
  | [A, B]
  | {
      range_min?: RangeMin;
      range_max?: RangeMax;
    };
/**
 * The first value of the range.
 */
export type A = number;
/**
 * The second value of the range.
 */
export type B = number;
/**
 * The minimum value of the range.
 */
export type RangeMin = number;
/**
 * The maximum value of the range.
 */
export type RangeMax = number;

/**
 * Allows this mob to look at and follow the player that holds food they like.
 */
export interface Beg {
  priority?: Priority;
  items?: Properties;
  look_distance?: LookDistance;
  look_time?: LookTime;
}
/**
 * An object that describes an item.
 */
export interface ItemDescriptor {
  tags?: Molang;
  /**
   * [UNDOCUMENTED] A tag to lookup item or block by.
   */
  item_tag?: string;
}
/**
 * An object that describes an item.
 */
export interface ItemDescriptor1 {
  tags?: Molang;
  /**
   * [UNDOCUMENTED] A tag to lookup item or block by.
   */
  item_tag?: string;
}
