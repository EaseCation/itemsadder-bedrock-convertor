/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * How important this behavior is. Lower priority behaviors will be executed first.
 */
export type Priority = number;
/**
 * The speed this entity moves when this behavior has started or while it's active.
 */
export type ActiveSpeed = number;
/**
 * If the dragon is outside the "target_zone" for longer than "continue_charge_threshold_time" seconds, the charge is canceled.
 */
export type ContinueChargeThresholdTime = number;
/**
 * The speed this entity moves while this behavior is not active.
 */
export type FlightSpeed = number;
/**
 * Minimum and maximum distance, from the target, this entity can use this behavior.
 */
export type TargetZone =
  | number
  | []
  | [A]
  | [A, B]
  | {
      range_min?: RangeMin;
      range_max?: RangeMax;
    };
/**
 * The first value of the range.
 */
export type A = number;
/**
 * The second value of the range.
 */
export type B = number;
/**
 * The minimum value of the range.
 */
export type RangeMin = number;
/**
 * The maximum value of the range.
 */
export type RangeMax = number;
/**
 * The speed at which this entity turns while using this behavior.
 */
export type TurnSpeed = number;

/**
 * Allows this entity to attack a player by charging at them. The player is chosen by the "minecraft:behavior.dragonscanning". Note: This behavior can only be used by the ender_dragon entity type.
 */
export interface Dragonchargeplayer {
  priority?: Priority;
  active_speed?: ActiveSpeed;
  continue_charge_threshold_time?: ContinueChargeThresholdTime;
  flight_speed?: FlightSpeed;
  target_zone?: TargetZone;
  turn_speed?: TurnSpeed;
}
