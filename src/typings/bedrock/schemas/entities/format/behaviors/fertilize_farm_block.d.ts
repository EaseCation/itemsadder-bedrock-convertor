/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * How important this behavior is. Lower priority behaviors will be executed first.
 */
export type Priority = number;
/**
 * Movement speed multiplier of the mob when using this AI Goal.
 */
export type SpeedMultiplier = number;
/**
 * Distance in blocks within the mob considers it has reached it's target position.
 */
export type GoalRadius = number;
/**
 * The maximum number of times the mob will use fertilzer on the target block.
 */
export type MaximumFertilizerUsage = number;
/**
 * The maximum amount of time in seconds that the goal can take before searching again. The time is chosen between 0 and this number.
 */
export type SearchCooldownMaximumSeconds = number;
/**
 * The number of randomly selected blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick.
 */
export type SearchCount = number;
/**
 * The Height in blocks the mob will search within to find a valid target position.
 */
export type SearchHeight = number;
/**
 * The distance in blocks the mob will search within to find a valid target position.
 */
export type SearchRange = number;

/**
 * Allows the mob to search within an area for a growable crop block. If found, the mob will use any available fertilizer in their inventory on the crop. This goal will not execute if the mob does not have a fertilizer item in its inventory.
 */
export interface FertilizeFarmBlock {
  priority?: Priority;
  speed_multiplier?: SpeedMultiplier;
  goal_radius?: GoalRadius;
  max_fertilizer_usage?: MaximumFertilizerUsage;
  search_cooldown_max_seconds?: SearchCooldownMaximumSeconds;
  search_count?: SearchCount;
  search_height?: SearchHeight;
  search_range?: SearchRange;
}
