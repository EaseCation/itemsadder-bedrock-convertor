/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * How important this behavior is. Lower priority behaviors will be executed first.
 */
export type Priority = number;
/**
 * Minimum and maximum cooldown time-range (positive, in seconds) between each attempted jump.
 */
export type CooldownRange = [] | [X] | [X, Y];
/**
 * The X component.
 */
export type X = number;
/**
 * The Y component.
 */
export type Y = number;
export type BlockceptionMinecraftItemDescriptor =
  | ItemIdentifier
  | ItemDescriptor
  | {
      item?: ItemIdentifier1 | ItemDescriptor1;
      [k: string]: unknown;
    };
/**
 * A minecraft item identifier.
 */
export type ItemIdentifier = string;
/**
 * [UNDOCUMENTED] A Molang expression ran against item or block to match.
 */
export type Molang = string;
/**
 * A minecraft item identifier.
 */
export type ItemIdentifier1 = string;
/**
 * Blocks that the mob can't jump to.
 */
export type ForbiddenBlocks = BlockceptionMinecraftItemDescriptor[];
/**
 * The maximum velocity with which the mob can jump.
 */
export type MaxVelocity = number;
/**
 * The minimum distance (in blocks) from the mob to a block, in order to consider jumping to it.
 */
export type MinimumDistance = number;
/**
 * The minimum length (in blocks) of the mobs path to a block, in order to consider jumping to it.
 */
export type MinimumPathLength = number;
/**
 * Blocks that the mob prefers jumping to.
 */
export type PreferredBlocks = BlockceptionMinecraftItemDescriptor[];
/**
 * Chance (between 0.0 and 1.0) that the mob will jump to a preferred block, if in range. Only matters if preferred blocks are defined.
 */
export type PreferredBlocksChance = number;
/**
 * The scalefactor of the bounding box of the mob while it is jumping.
 */
export type ScaleFactor = number;
/**
 * The height (in blocks, in range [2, 15]) of the search box, centered around the mob.
 */
export type SearchHeight = number;
/**
 * The width (in blocks, in range [2, 15]) of the search box, centered around the mob.
 */
export type SearchWidth = number;

/**
 * Allows an entity to jump to another random block.
 */
export interface JumpToBlock {
  priority?: Priority;
  cooldown_range?: CooldownRange;
  forbidden_blocks?: ForbiddenBlocks;
  max_velocity?: MaxVelocity;
  minimum_distance?: MinimumDistance;
  minimum_path_length?: MinimumPathLength;
  preferred_blocks?: PreferredBlocks;
  preferred_blocks_chance?: PreferredBlocksChance;
  scale_factor?: ScaleFactor;
  search_height?: SearchHeight;
  search_width?: SearchWidth;
}
/**
 * An object that describes an item.
 */
export interface ItemDescriptor {
  tags?: Molang;
  /**
   * [UNDOCUMENTED] A tag to lookup item or block by.
   */
  item_tag?: string;
}
/**
 * An object that describes an item.
 */
export interface ItemDescriptor1 {
  tags?: Molang;
  /**
   * [UNDOCUMENTED] A tag to lookup item or block by.
   */
  item_tag?: string;
}
