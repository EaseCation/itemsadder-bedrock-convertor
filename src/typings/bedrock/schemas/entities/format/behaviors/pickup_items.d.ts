/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * How important this behavior is. Lower priority behaviors will be executed first.
 */
export type Priority = number;
/**
 * Movement speed multiplier of the mob when using this AI Goal.
 */
export type SpeedMultiplier = number;
/**
 * If true, the mob can pickup any item.
 */
export type CanPickupAnyItem = boolean;
/**
 * If true, the mob can pickup items to its hand or armor slots.
 */
export type CanPickupToHandOrEquipment = boolean;
/**
 * Amount of time an offended entity needs before being willing to pick up items.
 */
export type CooldownAfterBeingAttacked = number;
export type ExcludedItem =
  | ItemIdentifier
  | ItemDescriptor
  | {
      item?: ItemIdentifier1 | ItemDescriptor1;
      [k: string]: unknown;
    };
/**
 * A minecraft item identifier.
 */
export type ItemIdentifier = string;
/**
 * [UNDOCUMENTED] A Molang expression ran against item or block to match.
 */
export type Molang = string;
/**
 * A minecraft item identifier.
 */
export type ItemIdentifier1 = string;
/**
 * List of items this mob will not pick up.
 */
export type ExcludedItems = ExcludedItem[];
/**
 * Distance in blocks within the mob considers it has reached the goal. This is the `wiggle room` to stop the AI from bouncing back and forth trying to reach a specific spot.
 */
export type GoalRadius = number;
/**
 * Maximum distance this mob will look for items to pick up.
 */
export type MaximumDist = number;
/**
 * Height in blocks the mob will look for items to pick up.
 */
export type SearchHeight = number;
/**
 * If true, depending on the difficulty, there is a random chance that the mob may not be able to pickup items.
 */
export type PickupBasedOnChance = boolean;
/**
 * If true, the mob will pickup the same item as the item in its hand.
 */
export type PickupSameItemsAsInHand = boolean;
/**
 * If true, this mob will chase after the target as long as it's a valid target.
 */
export type TrackTarget = boolean;

/**
 * Allows the mob to pick up items on the ground.
 */
export interface PickupItems {
  priority?: Priority;
  speed_multiplier?: SpeedMultiplier;
  can_pickup_any_item?: CanPickupAnyItem;
  can_pickup_to_hand_or_equipment?: CanPickupToHandOrEquipment;
  cooldown_after_being_attacked?: CooldownAfterBeingAttacked;
  excluded_items?: ExcludedItems;
  goal_radius?: GoalRadius;
  max_dist?: MaximumDist;
  search_height?: SearchHeight;
  pickup_based_on_chance?: PickupBasedOnChance;
  pickup_same_items_as_in_hand?: PickupSameItemsAsInHand;
  track_target?: TrackTarget;
}
/**
 * An object that describes an item.
 */
export interface ItemDescriptor {
  tags?: Molang;
  /**
   * [UNDOCUMENTED] A tag to lookup item or block by.
   */
  item_tag?: string;
}
/**
 * An object that describes an item.
 */
export interface ItemDescriptor1 {
  tags?: Molang;
  /**
   * [UNDOCUMENTED] A tag to lookup item or block by.
   */
  item_tag?: string;
}
