/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * How important this behavior is. Lower priority behaviors will be executed first.
 */
export type Priority = number;
/**
 * Movement speed multiplier of the mob when using this AI Goal.
 */
export type SpeedMultiplier = number;
/**
 * A block identifier.
 */
export type BlockId = BlockId1 & BlockId2;
export type BlockId1 = BlockIdentifier | BlockReference;
/**
 * A minecraft block identifier.
 */
export type BlockIdentifier = string;
/**
 * A minecraft block identifier.
 */
export type BlockIdentifier1 = string;
/**
 * The key of property is the name of the block state/property, the value must be the same as the block properties accepted values.
 */
export type StateValue = boolean | number | string;
/**
 * A condition using Molang queries that results to true/false that can be used to query for blocks with certain tags.
 */
export type Molang = string;
export type BlockId2 = string;
/**
 * Blocks that the mob is looking for to eat.
 */
export type Blocks = BlockId[];
/**
 * Time in seconds between each time it eats.
 */
export type EatDelay = number;
/**
 * Amount of time in seconds before this mob wants to eat again.
 */
export type FullDelay = number;
/**
 * Time in seconds before starting to eat/raid once it arrives at it.
 */
export type InitialEatDelay = number;
/**
 * Distance in blocks within the mob considers it has reached the goal. This is the `wiggle room` to stop the AI from bouncing back and forth trying to reach a specific spot
 */
export type GoalRadius = number;
/**
 * Maximum number of things this entity wants to eat.
 */
export type MaximumToEat = number;
/**
 * Distance in blocks the mob will look for crops to eat.
 */
export type SearchRange = number;
/**
 * Height in blocks the mob will look for crops to eat.
 */
export type SearchHeight = number;

/**
 * Allows the mob to eat/raid crops out of farms until they are full.
 */
export interface RaidGarden {
  priority?: Priority;
  speed_multiplier?: SpeedMultiplier;
  blocks?: Blocks;
  eat_delay?: EatDelay;
  full_delay?: FullDelay;
  initial_eat_delay?: InitialEatDelay;
  goal_radius?: GoalRadius;
  max_to_eat?: MaximumToEat;
  search_range?: SearchRange;
  search_height?: SearchHeight;
}
export interface BlockReference {
  name?: BlockIdentifier1;
  states?: States;
  tags?: Molang;
}
export interface States {
  [k: string]: StateValue;
}
