/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Cost for non-preferred blocks.
 */
export type DefaultBlockCost = number;
/**
 * Added cost for jumping up a node.
 */
export type JumpCost = number;
/**
 * Distance mob can fall without taking damage.
 */
export type MaximumFallBlocks = number;
/**
 * A minecraft block reference.
 */
export type BlockReference = BlockIdentifier | BlockReference1;
/**
 * A minecraft block identifier.
 */
export type BlockIdentifier = string;
/**
 * A minecraft block identifier.
 */
export type BlockIdentifier1 = string;
/**
 * The key of property is the name of the block state/property, the value must be the same as the block properties accepted values.
 */
export type StateValue = boolean | number | string;
/**
 * A condition using Molang queries that results to true/false that can be used to query for blocks with certain tags.
 */
export type Molang = string;
/**
 * A list of blocks with their associated cost.
 */
export type PreferredPathBlocks = {
  cost?: number;
  blocks?: BlockReference[];
}[];

/**
 * Specifies costing information for mobs that prefer to walk on preferred paths.
 */
export interface PreferredPath {
  default_block_cost?: DefaultBlockCost;
  jump_cost?: JumpCost;
  max_fall_blocks?: MaximumFallBlocks;
  preferred_path_blocks?: PreferredPathBlocks;
}
export interface BlockReference1 {
  name?: BlockIdentifier1;
  states?: States;
  tags?: Molang;
}
export interface States {
  [k: string]: StateValue;
}
