/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The amount the entity's temper will increase when mounted.
 */
export type AttemptTemperMod = number;
/**
 * The list of items that, if carried while interacting with the entity, will anger it.
 */
export type AutoRejectItems = AutoRejectItems1 | AutoRejectItems2[];
/**
 * Name of the item this entity dislikes and will cause it to get angry if used while untamed.
 */
export type BlockceptionMinecraftItemDescriptor =
  | ItemIdentifier
  | ItemDescriptor
  | {
      item?: ItemIdentifier1 | ItemDescriptor1;
      [k: string]: unknown;
    };
/**
 * A minecraft item identifier.
 */
export type ItemIdentifier = string;
/**
 * [UNDOCUMENTED] A Molang expression ran against item or block to match.
 */
export type Molang = string;
/**
 * A minecraft item identifier.
 */
export type ItemIdentifier1 = string;
/**
 * The text that shows in the feeding interact button.
 */
export type FeedText = string;
/**
 * The list of items that can be used to increase the entity's temper and speed up the taming process.
 */
export type FeedItems = FeedItems1 | FeedItems2[];
/**
 * Name of the item this entity likes and can be used to increase this entity's temper.
 */
export type Item =
  | ItemIdentifier
  | ItemDescriptor
  | {
      item?: ItemIdentifier1 | ItemDescriptor1;
      [k: string]: unknown;
    };
/**
 * The amount of temper this entity gains when fed this item.
 */
export type TemperMod = number;
/**
 * The maximum value for the entity's random starting temper.
 */
export type MaximumTemper = number;
/**
 * The minimum value for the entity's random starting temper.
 */
export type MinimumTemper = number;
/**
 * The text that shows in the riding interact button.
 */
export type RideText = string;
/**
 * The event to fire.
 */
export type Event = string;
/**
 * The target of the event.
 */
export type Target = "baby" | "block" | "damager" | "other" | "parent" | "player" | "self" | "target";

/**
 * Allows the Entity to be tamed by mounting it.
 */
export interface Tamemount {
  attempt_temper_mod?: AttemptTemperMod;
  auto_reject_items?: AutoRejectItems;
  feed_text?: FeedText;
  feed_items?: FeedItems;
  max_temper?: MaximumTemper;
  min_temper?: MinimumTemper;
  ride_text?: RideText;
  tame_event?: TameEvent;
}
/**
 * The list of items that this entity dislikes and will cause it to get angry if used while untamed.
 */
export interface AutoRejectItems1 {
  item?: BlockceptionMinecraftItemDescriptor;
  [k: string]: unknown;
}
/**
 * An object that describes an item.
 */
export interface ItemDescriptor {
  tags?: Molang;
  /**
   * [UNDOCUMENTED] A tag to lookup item or block by.
   */
  item_tag?: string;
}
/**
 * An object that describes an item.
 */
export interface ItemDescriptor1 {
  tags?: Molang;
  /**
   * [UNDOCUMENTED] A tag to lookup item or block by.
   */
  item_tag?: string;
}
/**
 * The list of items that this entity dislikes and will cause it to get angry if used while untamed.
 */
export interface AutoRejectItems2 {
  item?: BlockceptionMinecraftItemDescriptor;
  [k: string]: unknown;
}
/**
 * The list of items that can be used to increase the entity's temper and speed up the taming process.
 */
export interface FeedItems1 {
  item?: Item;
  temper_mod?: TemperMod;
  [k: string]: unknown;
}
/**
 * The list of items that can be used to increase the entity's temper and speed up the taming process.
 */
export interface FeedItems2 {
  item?: Item;
  temper_mod?: TemperMod;
  [k: string]: unknown;
}
/**
 * Event that triggers when the entity becomes tamed.
 */
export interface TameEvent {
  event?: Event;
  target?: Target;
}
