/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the other entity needs to be visible to trigger `inside` events.
 */
export type MustSee = boolean;
/**
 * Maximum distance in blocks that another entity will be considered in the `inside` range.
 */
export type InsideRange = number;
/**
 * The event to fire.
 */
export type Event = string;
/**
 * The target of the event.
 */
export type Target = "baby" | "block" | "damager" | "other" | "parent" | "player" | "self" | "target";
/**
 * Maximum distance in blocks that another entity will be considered in the `outside` range.
 */
export type OutsideRange = number;

/**
 * Defines the entity's range within which it can see or sense other entities to target them.
 */
export interface TargetNearbySensor {
  must_see?: MustSee;
  inside_range?: InsideRange;
  on_inside_range?: OnInsideRange;
  on_outside_range?: OnOutsideRange;
  on_vision_lost_inside_range?: OnVisionLostInsideRange;
  outside_range?: OutsideRange;
}
/**
 * Event to call when an entity gets in the inside range. Can specify `event` for the name of the event and `target` for the target of the event
 */
export interface OnInsideRange {
  event?: Event;
  target?: Target;
}
/**
 * Event to call when an entity gets in the outside range. Can specify `event` for the name of the event and `target` for the target of the event
 */
export interface OnOutsideRange {
  event?: Event;
  target?: Target;
}
/**
 * Event to call when an entity exits visual range. Can specify `event` for the name of the event and `target` for the target of the event
 */
export interface OnVisionLostInsideRange {
  event?: Event;
  target?: Target;
}
