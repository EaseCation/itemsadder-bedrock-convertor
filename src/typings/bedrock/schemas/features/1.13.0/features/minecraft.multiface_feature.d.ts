/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of this feature in the form `namespace_name:feature_name`. `feature_name` must match the filename.
 */
export type Identifier = string;
/**
 * Reference to the block to be placed.
 */
export type PlacesBlock = string;
/**
 * How far, in blocks, this feature can search for a valid position to place.
 */
export type SearchRange = number;
/**
 * Can this feature be placed on the ground (top face of a block)?.
 */
export type CanPlaceOnFloor = boolean;
/**
 * Can this feature be placed on the ceiling (bottom face of a block)?.
 */
export type CanPlaceOnCeiling = boolean;
/**
 * Can this feature be placed on the wall (side faces of a block)?.
 */
export type CanPlaceOnWall = boolean;
/**
 * For each block placed by this feature, how likely will that block spread to another?.
 */
export type ChanceOfSpreading = number;
/**
 *  How far, in blocks, this feature can search for a valid position to place.
 *
 * @minItems 1
 */
export type CanPlaceOn = [Block, ...Block[]];
/**
 *  A list of blocks that the block in this feature can be placed on. Omit this field to allow any block to be placed on.
 */
export type Block = string;

/**
 * `minecraft:multiface_feature` places one or a few multiface blocks on floors/walls/ceilings. Despite the name, any block can be placed by this feature. During placement, existing world blocks are checked to see if this feature can be placed on them based on the list provided in the `can_place_on` field. If no `can_replace_on` field is specified, the `place_block` block can be placed on any existing block.
 * This feature will also try to spread the `place_block` block around the location in world the feature is placed.
 * Succeeds if: At least one block is successfully placed.
 * Fails if: All block placements fail.
 */
export interface MultifaceFeature {
  description: Description;
  places_block: PlacesBlock;
  search_range: SearchRange;
  can_place_on_floor: CanPlaceOnFloor;
  can_place_on_ceiling: CanPlaceOnCeiling;
  can_place_on_wall: CanPlaceOnWall;
  chance_of_spreading: ChanceOfSpreading;
  can_place_on?: CanPlaceOn;
}
/**
 * UNDOCUMENTED.
 */
export interface Description {
  identifier: Identifier;
  [k: string]: unknown;
}
