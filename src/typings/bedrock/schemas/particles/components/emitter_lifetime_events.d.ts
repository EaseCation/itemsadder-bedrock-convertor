/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Fires when the emitter is created.
 */
export type CreationEvent = string[] | string;
/**
 * Fires when the emitter expires (does not wait for particles to expire too).
 */
export type ExpirationEvent = string[] | string;
/**
 * A single point in time that executes commands/molang/events.
 */
export type TimelineObject = string[] | string;
/**
 * UNDOCUMENTED.
 */
export type Distance = number;
/**
 * UNDOCUMENTED.
 */
export type Effects = string[] | string;
/**
 * A series of events that occur at set intervals these get fired every time the emitter has moved the specified input distance from the last time it was fired.
 */
export type LoopingTravelDistanceEvents = DistanceEvent[];

/**
 * UNDOCUMENTED.
 */
export interface EmitterLifetimeEventsComponentFor1100 {
  creation_event?: CreationEvent;
  expiration_event?: ExpirationEvent;
  timeline?: Timeline;
  travel_distance_events?: TravelDistanceEvents;
  looping_travel_distance_events?: LoopingTravelDistanceEvents;
}
/**
 * A series of times, e.g. 0.0 or 1.0, that trigger the event, these get fired on every loop the emitter goes through, `time` is the time, e.g. one line might be: `0.4`: `event`
 */
export interface Timeline {
  [k: string]: TimelineObject;
}
/**
 * A series of distances, e.g. 0.0 or 1.0, that trigger the event these get fired when the emitter has moved by the specified input distance, e.g. one line might be: `0.4`: `event`
 */
export interface TravelDistanceEvents {
  [k: string]: unknown;
}
export interface DistanceEvent {
  distance?: Distance;
  effects?: Effects;
}
