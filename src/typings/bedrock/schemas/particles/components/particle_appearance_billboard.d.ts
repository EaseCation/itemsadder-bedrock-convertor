/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * UNDOCUMENTED: size.
 *
 * @minItems 2
 * @maxItems 2
 */
export type Size = [Size1, Size1];
/**
 * UNDOCUMENTED: size.
 */
export type Size1 = string | number;
/**
 * Used to orient the billboard.
 */
export type FacingCameraMode =
  | "lookat_xyz"
  | "lookat_y"
  | "rotate_xyz"
  | "rotate_y"
  | "direction_x"
  | "direction_y"
  | "direction_z";
/**
 * UNDOCUMENTED.
 */
export type MolangNumber = string | number;
/**
 * UNDOCUMENTED: texture width.
 */
export type TextureWidth = number;
/**
 * UNDOCUMENTED: texture height.
 */
export type TextureHeight = number;
/**
 * UNDOCUMENTED: base UV.
 *
 * @minItems 2
 * @maxItems 2
 */
export type BaseUV = [BaseUV1, BaseUV1];
/**
 * UNDOCUMENTED: base UV.
 */
export type BaseUV1 = string | number;
/**
 * UNDOCUMENTED: size UV.
 *
 * @minItems 2
 * @maxItems 2
 */
export type SizeUV = [SizeUV1, SizeUV1];
/**
 * UNDOCUMENTED: size UV.
 */
export type SizeUV1 = string | number;
/**
 * UNDOCUMENTED: step UV.
 *
 * @minItems 2
 * @maxItems 2
 */
export type StepUV = [StepUV1, StepUV1];
/**
 * UNDOCUMENTED: step UV.
 */
export type StepUV1 = string | number;
/**
 * UNDOCUMENTED: frames per second.
 */
export type FramesPerSecond = string | number;
/**
 * UNDOCUMENTED: Maximum frame.
 */
export type MaximumFrame = string | number;
/**
 * UNDOCUMENTED: stretch to lifetime.
 */
export type StretchToLifetime = boolean;
/**
 * UNDOCUMENTED: loop.
 */
export type Loop = boolean;
/**
 * UNDOCUMENTED: uv.
 *
 * @minItems 2
 * @maxItems 2
 */
export type Uv1 = [Uv2, Uv2];
/**
 * UNDOCUMENTED: uv.
 */
export type Uv2 = string | number;
/**
 * UNDOCUMENTED: uv size.
 *
 * @minItems 2
 * @maxItems 2
 */
export type UvSize = [UvSize1, UvSize1];
/**
 * UNDOCUMENTED: uv size.
 */
export type UvSize1 = string | number;

/**
 * UNDOCUMENTED.
 */
export interface ParticleAppearanceBillboardComponentFor1100 {
  size?: Size;
  facing_camera_mode?: FacingCameraMode;
  /**
   * UNDOCUMENTED
   */
  direction?: {
    /**
     * Specified how to calculate the billboard direction of a particle.
     */
    mode?: "custom" | "derive_from_velocity";
    /**
     * The facing direction of emitted particles.
     *
     * @minItems 3
     * @maxItems 3
     */
    custom_direction?: [MolangNumber, MolangNumber, MolangNumber];
    /**
     * The direction is set if the speed of the particle is above the threshold.
     */
    min_speed_threshold?: number;
    [k: string]: unknown;
  };
  uv?: Uv;
}
/**
 * UNDOCUMENTED: uv.
 */
export interface Uv {
  texture_width?: TextureWidth;
  texture_height?: TextureHeight;
  flipbook?: Flipbook;
  uv?: Uv1;
  uv_size?: UvSize;
}
/**
 * UNDOCUMENTED: flipbook.
 */
export interface Flipbook {
  base_UV?: BaseUV;
  size_UV?: SizeUV;
  step_UV?: StepUV;
  frames_per_second?: FramesPerSecond;
  max_frame: MaximumFrame;
  stretch_to_lifetime?: StretchToLifetime;
  loop?: Loop;
}
