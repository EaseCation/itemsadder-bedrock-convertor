/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * A version that tells minecraft what type of data format can be expected when reading this file.
 */
export type FormatVersion = string;
/**
 * UNDOCUMENTED: identifier.
 */
export type Identifier = string;
/**
 *  Minecraft material to use for emitter.
 */
export type Material = string;
/**
 * Minecraft texture to use for emitter.
 */
export type Texture = string;
/**
 * What is the input value to use.
 */
export type Input = string | number;
/**
 * Control nodes for curve.  These are assumed to be equally, used Object for bezier_chain
 */
export type Nodes =
  | [MolangNumber, ...MolangNumber[]]
  | {
      [k: string]: {
        [k: string]: unknown;
      };
    };
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber = string | number;
/**
 * The type of curve.
 */
export type Type = "linear" | "bezier" | "bezier_chain" | "catmull_rom";
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber1 = string | number;
/**
 * This is run once at emitter startup.
 */
export type CreationExpression = string;
/**
 * This is run once per emitter update.
 */
export type PerUpdateExpression = string;
/**
 * Fires when the emitter is created.
 */
export type CreationEvent = string[] | string;
/**
 * Fires when the emitter expires (does not wait for particles to expire too).
 */
export type ExpirationEvent = string[] | string;
/**
 * A single point in time that executes commands/molang/events.
 */
export type TimelineObject = string[] | string;
/**
 * UNDOCUMENTED.
 */
export type Distance = number;
/**
 * UNDOCUMENTED.
 */
export type Effects = string[] | string;
/**
 * A series of events that occur at set intervals these get fired every time the emitter has moved the specified input distance from the last time it was fired.
 */
export type LoopingTravelDistanceEvents = DistanceEvent[];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber2 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber3 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber4 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber5 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber6 = string | number;
/**
 * UNDOCUMENTED: position.
 */
export type Position = boolean;
/**
 * UNDOCUMENTED: rotation.
 */
export type Rotation = boolean;
/**
 * UNDOCUMENTED: rotation.
 */
export type Rotation1 = boolean;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber7 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber8 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber9 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber10 = string | number;
/**
 * UNDOCUMENTED: direction.
 */
export type Direction =
  | ("inwards" | "outwards")
  | []
  | [MolangNumber11]
  | [MolangNumber11, MolangNumber12]
  | [MolangNumber11, MolangNumber12, MolangNumber13];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber11 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber12 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber13 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber14 = string | number;
/**
 * UNDOCUMENTED.
 */
export type Offset =
  | []
  | [MolangNumber15]
  | [MolangNumber15, MolangNumber16]
  | [MolangNumber15, MolangNumber16, MolangNumber17];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber15 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber16 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber17 = string | number;
/**
 * UNDOCUMENTED: half dimensions.
 */
export type HalfDimensions =
  | []
  | [MolangNumber18]
  | [MolangNumber18, MolangNumber19]
  | [MolangNumber18, MolangNumber19, MolangNumber20];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber18 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber19 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber20 = string | number;
/**
 * UNDOCUMENTED: surface only.
 */
export type SurfaceOnly = boolean;
/**
 * UNDOCUMENTED: direction.
 */
export type Direction1 =
  | []
  | [MolangNumber21]
  | [MolangNumber21, MolangNumber22]
  | [MolangNumber21, MolangNumber22, MolangNumber23];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber21 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber22 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber23 = string | number;
/**
 * UNDOCUMENTED.
 */
export type Offset1 =
  | []
  | [MolangNumber24]
  | [MolangNumber24, MolangNumber25]
  | [MolangNumber24, MolangNumber25, MolangNumber26];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber24 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber25 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber26 = string | number;
/**
 * UNDOCUMENTED: direction.
 */
export type Direction2 =
  | ("inwards" | "outwards")
  | []
  | [MolangNumber27]
  | [MolangNumber27, MolangNumber28]
  | [MolangNumber27, MolangNumber28, MolangNumber29];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber27 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber28 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber29 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber30 = string | number;
/**
 * UNDOCUMENTED.
 */
export type Offset2 =
  | []
  | [MolangNumber31]
  | [MolangNumber31, MolangNumber32]
  | [MolangNumber31, MolangNumber32, MolangNumber33];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber31 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber32 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber33 = string | number;
/**
 * Specifies the normal of the disc plane, the disc will be perpendicular to this direction.
 */
export type PlaneNormal =
  | ("x" | "y" | "z")
  | []
  | [MolangNumber34]
  | [MolangNumber34, MolangNumber35]
  | [MolangNumber34, MolangNumber35, MolangNumber36];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber34 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber35 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber36 = string | number;
/**
 * UNDOCUMENTED: surface only.
 */
export type SurfaceOnly1 = boolean;
/**
 * UNDOCUMENTED: direction.
 */
export type Direction3 =
  | []
  | [MolangNumber37]
  | [MolangNumber37, MolangNumber38]
  | [MolangNumber37, MolangNumber38, MolangNumber39];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber37 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber38 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber39 = string | number;
/**
 * UNDOCUMENTED.
 */
export type Offset3 =
  | []
  | [MolangNumber40]
  | [MolangNumber40, MolangNumber41]
  | [MolangNumber40, MolangNumber41, MolangNumber42];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber40 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber41 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber42 = string | number;
/**
 * UNDOCUMENTED: direction.
 */
export type Direction4 =
  | []
  | [MolangNumber43]
  | [MolangNumber43, MolangNumber44]
  | [MolangNumber43, MolangNumber44, MolangNumber45];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber43 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber44 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber45 = string | number;
/**
 * UNDOCUMENTED.
 */
export type Offset4 =
  | []
  | [MolangNumber46]
  | [MolangNumber46, MolangNumber47]
  | [MolangNumber46, MolangNumber47, MolangNumber48];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber46 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber47 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber48 = string | number;
/**
 * UNDOCUMENTED: direction.
 */
export type Direction5 =
  | ("inwards" | "outwards")
  | []
  | [MolangNumber49]
  | [MolangNumber49, MolangNumber50]
  | [MolangNumber49, MolangNumber50, MolangNumber51];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber49 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber50 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber51 = string | number;
/**
 * UNDOCUMENTED.
 */
export type Offset5 =
  | []
  | [MolangNumber52]
  | [MolangNumber52, MolangNumber53]
  | [MolangNumber52, MolangNumber53, MolangNumber54];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber52 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber53 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber54 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber55 = string | number;
/**
 * UNDOCUMENTED: surface only.
 */
export type SurfaceOnly2 = boolean;
/**
 * UNDOCUMENTED: size.
 *
 * @minItems 2
 * @maxItems 2
 */
export type Size = [MolangNumber56, MolangNumber56];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber56 = string | number;
/**
 * Used to orient the billboard.
 */
export type FacingCameraMode =
  | "lookat_xyz"
  | "lookat_y"
  | "rotate_xyz"
  | "rotate_y"
  | "direction_x"
  | "direction_y"
  | "direction_z";
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber57 = string | number;
/**
 * UNDOCUMENTED: texture width.
 */
export type TextureWidth = number;
/**
 * UNDOCUMENTED: texture height.
 */
export type TextureHeight = number;
/**
 * UNDOCUMENTED: base UV.
 *
 * @minItems 2
 * @maxItems 2
 */
export type BaseUV = [MolangNumber58, MolangNumber58];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber58 = string | number;
/**
 * UNDOCUMENTED: size UV.
 *
 * @minItems 2
 * @maxItems 2
 */
export type SizeUV = [MolangNumber59, MolangNumber59];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber59 = string | number;
/**
 * UNDOCUMENTED: step UV.
 *
 * @minItems 2
 * @maxItems 2
 */
export type StepUV = [MolangNumber60, MolangNumber60];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber60 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber61 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber62 = string | number;
/**
 * UNDOCUMENTED: stretch to lifetime.
 */
export type StretchToLifetime = boolean;
/**
 * UNDOCUMENTED: loop.
 */
export type Loop = boolean;
/**
 * UNDOCUMENTED: uv.
 *
 * @minItems 2
 * @maxItems 2
 */
export type Uv1 = [MolangNumber63, MolangNumber63];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber63 = string | number;
/**
 * UNDOCUMENTED: uv size.
 *
 * @minItems 2
 * @maxItems 2
 */
export type UvSize = [MolangNumber64, MolangNumber64];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber64 = string | number;
/**
 * UNDOCUMENTED.
 */
export type Color =
  | MolangNumber[]
  | string
  | {
      gradient?: Gradient;
      interpolant?: MolangNumber65;
    };
export type Gradient =
  | Color1[]
  | {
      /**
       * Color.
       */
      [k: string]: string;
    }
  | [Color2 | Molang, Color2 | Molang, Color2 | Molang, ...(Color2 | Molang)[]][];
/**
 * Color.
 */
export type Color1 = string;
/**
 * Color.
 */
export type Color2 = number;
export type Molang = string;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber65 = string | number;
/**
 * UNDOCUMENTED.
 */
export type Block = string;
/**
 * UNDOCUMENTED.
 */
export type ParticleExpireIfNotInBlocksComponentFor1100 = Block[];
/**
 * UNDOCUMENTED.
 */
export type Block1 = string;
/**
 * UNDOCUMENTED.
 */
export type ParticleExpireIfNotInBlocksComponentFor11001 = Block1[];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber66 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber67 = string | number;
/**
 * UNDOCUMENTED.
 */
export type ParticleInitialSpeedComponentFor1100 =
  | MolangNumber
  | []
  | [MolangNumber68]
  | [MolangNumber68, MolangNumber69]
  | [MolangNumber68, MolangNumber69, MolangNumber70];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber68 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber69 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber70 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber71 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber72 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber73 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber74 = string | number;
/**
 * Fires when the particle is created.
 */
export type CreationEvent1 = string[] | string;
/**
 * Fires when the particle expires (does not wait for particles to expire too).
 */
export type ExpirationEvent1 = string[] | string;
/**
 * A*x + B*y + C*z + D = 0
 * with the parameters being [ A, B, C, D ].
 */
export type ParticleKillPlaneComponentFor1100 =
  | []
  | [MolangNumber75]
  | [MolangNumber75, MolangNumber76]
  | [MolangNumber75, MolangNumber76, MolangNumber77]
  | [MolangNumber75, MolangNumber76, MolangNumber77, MolangNumber78];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber75 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber76 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber77 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber78 = string | number;
/**
 * UNDOCUMENTED: collision drag.
 */
export type CollisionDrag = number;
/**
 * UNDOCUMENTED: coefficient of restitution.
 */
export type CoefficientOfRestitution = number;
/**
 * UNDOCUMENTED: collision radius.
 */
export type CollisionRadius = number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber79 = string | number;
/**
 * UNDOCUMENTED: expire on contact.
 */
export type ExpireOnContact = boolean;
/**
 * UNDOCUMENTED: event.
 */
export type Event = string;
/**
 * UNDOCUMENTED: Minimum speed.
 */
export type MinimumSpeed = number;
/**
 * UNDOCUMENTED: events.
 */
export type Events = Events1[];
/**
 * The linear acceleration applied to the particle. Units are blocks/sec/sec
 *
 * @minItems 3
 * @maxItems 3
 */
export type LinearAcceleration = [MolangNumber, MolangNumber, MolangNumber];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber80 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber81 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber82 = string | number;
/**
 * UNDOCUMENTED: relative position.
 *
 * @minItems 3
 * @maxItems 3
 */
export type RelativePosition = [MolangNumber83, MolangNumber83, MolangNumber83];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber83 = string | number;
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber84 = string | number;
/**
 * UNDOCUMENTED: relative position.
 *
 * @minItems 3
 * @maxItems 3
 */
export type Direction6 = [MolangNumber85, MolangNumber85, MolangNumber85];
/**
 * The minecraft molang definition that results in a float.
 */
export type MolangNumber85 = string | number;
/**
 * UNDOCUMENTED: effect.
 */
export type Effect = string;
/**
 * UNDOCUMENTED: type.
 */
export type Type1 = string;
/**
 * UNDOCUMENTED: effect.
 */
export type EventName = string;

/**
 * A particle definition file.
 */
export interface Particle {
  format_version?: FormatVersion;
  particle_effect?: ParticleEffect;
}
/**
 * UNDOCUMENTED: particle effect.
 */
export interface ParticleEffect {
  description?: Description;
  curves?: Curves;
  components?: Components;
  events?: Events2;
}
/**
 * UNDOCUMENTED: description.
 */
export interface Description {
  identifier: Identifier;
  basic_render_parameters: BasicRenderParameters;
}
/**
 * UNDOCUMENTED: basic render parameters.
 */
export interface BasicRenderParameters {
  material?: Material;
  texture?: Texture;
}
/**
 * Curves are interpolation values, with inputs from 0 to 1, and outputs based on the curve. The result of the curve is a Molang variable of the same name that can be referenced in Molang in components. For each rendering frame for each particle, the curves are evaluated and the result is placed in a Molang variable of the name of the curve.
 */
export interface Curves {
  [k: string]: Curve;
}
/**
 * The curve definitions, conists out of a couple of nodes.
 */
export interface Curve {
  input?: Input;
  nodes?: Nodes;
  type?: Type;
  horizontal_range?: MolangNumber1;
}
/**
 * The particle components.
 */
export interface Components {
  "minecraft:emitter_initialization"?: EmitterInitializationComponentFor1100;
  "minecraft:emitter_lifetime_events"?: EmitterLifetimeEventsComponentFor1100;
  "minecraft:emitter_lifetime_expression"?: EmitterRateManualComponent1100;
  "minecraft:emitter_lifetime_once"?: EmitterLifetimeOnceComponentFor1100;
  "minecraft:emitter_lifetime_looping"?: EmitterLifetimeLoopingComponentFor1100;
  "minecraft:emitter_local_space"?: EmitterLocalSpaceComponentFor1100;
  "minecraft:emitter_rate_instant"?: EmitterRateInstantComponentFor1100;
  "minecraft:emitter_rate_manual"?: EmitterRateManualComponentFor1100;
  "minecraft:emitter_rate_steady"?: EmitterRateSteadyComponentFor1100;
  "minecraft:emitter_shape_box"?: EmitterShapeBoxComponentFor1100;
  "minecraft:emitter_shape_custom"?: EmitterShapeCustomComponentFor1100;
  "minecraft:emitter_shape_disc"?: EmitterShapeDiscComponentFor1100;
  "minecraft:emitter_shape_entity_aabb"?: EmitterShapeEntityAabbComponentFor1100;
  "minecraft:emitter_shape_point"?: EmitterShapePointComponentFor1100;
  "minecraft:emitter_shape_sphere"?: EmitterShapeSphereComponentFor1100;
  "minecraft:particle_appearance_billboard"?: ParticleAppearanceBillboardComponentFor1100;
  "minecraft:particle_appearance_tinting"?: ParticleAppearanceTintingComponentFor1100;
  "minecraft:particle_appearance_lighting"?: ParticleAppearanceLightingComponentFor1100;
  "minecraft:particle_expire_if_not_in_blocks"?: ParticleExpireIfNotInBlocksComponentFor1100;
  "minecraft:particle_expire_if_in_blocks"?: ParticleExpireIfNotInBlocksComponentFor11001;
  "minecraft:particle_initialization"?: ParticleInitializationComponentFor1100;
  "minecraft:particle_initial_speed"?: ParticleInitialSpeedComponentFor1100;
  "minecraft:particle_initial_spin"?: ParticleInitialSpinComponentFor1100;
  "minecraft:particle_lifetime_expression"?: ParticleLifetimeExpressionComponentFor1100;
  "minecraft:particle_lifetime_events"?: ParticleLifetimeEventsComponentFor1100;
  "minecraft:particle_kill_plane"?: ParticleKillPlaneComponentFor1100;
  "minecraft:particle_motion_collision"?: ParticleMotionCollisionComponentFor1100;
  "minecraft:particle_motion_dynamic"?: ParticleMotionDynamicComponentFor1100;
  "minecraft:particle_motion_parametric"?: ParticleMotionParametricComponentFor1100;
}
/**
 * This component allows the emitter to run some Molang at creation, primarily to populate any Molang variables that get used later.
 */
export interface EmitterInitializationComponentFor1100 {
  creation_expression?: CreationExpression;
  per_update_expression?: PerUpdateExpression;
}
/**
 * UNDOCUMENTED.
 */
export interface EmitterLifetimeEventsComponentFor1100 {
  creation_event?: CreationEvent;
  expiration_event?: ExpirationEvent;
  timeline?: Timeline;
  travel_distance_events?: TravelDistanceEvents;
  looping_travel_distance_events?: LoopingTravelDistanceEvents;
}
/**
 * A series of times, e.g. 0.0 or 1.0, that trigger the event, these get fired on every loop the emitter goes through, `time` is the time, e.g. one line might be: `0.4`: `event`
 */
export interface Timeline {
  [k: string]: TimelineObject;
}
/**
 * A series of distances, e.g. 0.0 or 1.0, that trigger the event these get fired when the emitter has moved by the specified input distance, e.g. one line might be: `0.4`: `event`
 */
export interface TravelDistanceEvents {
  [k: string]: unknown;
}
export interface DistanceEvent {
  distance?: Distance;
  effects?: Effects;
}
/**
 * UNDOCUMENTED.
 */
export interface EmitterRateManualComponent1100 {
  activation_expression?: MolangNumber2;
  expiration_expression?: MolangNumber3;
}
/**
 * UNDOCUMENTED.
 */
export interface EmitterLifetimeOnceComponentFor1100 {
  active_time?: MolangNumber4;
}
/**
 * UNDOCUMENTED.
 */
export interface EmitterLifetimeLoopingComponentFor1100 {
  active_time?: MolangNumber5;
  sleep_time?: MolangNumber6;
}
/**
 * UNDOCUMENTED:.
 */
export interface EmitterLocalSpaceComponentFor1100 {
  position?: Position;
  rotation?: Rotation;
  velocity?: Rotation1;
}
/**
 * UNDOCUMENTED.
 */
export interface EmitterRateInstantComponentFor1100 {
  num_particles?: MolangNumber7;
}
/**
 * UNDOCUMENTED.
 */
export interface EmitterRateManualComponentFor1100 {
  max_particles?: MolangNumber8;
}
/**
 * UNDOCUMENTED.
 */
export interface EmitterRateSteadyComponentFor1100 {
  max_particles?: MolangNumber9;
  spawn_rate?: MolangNumber10;
}
/**
 * UNDOCUMENTED.
 */
export interface EmitterShapeBoxComponentFor1100 {
  direction?: Direction;
  radius?: MolangNumber14;
  offset?: Offset;
  half_dimensions?: HalfDimensions;
  surface_only?: SurfaceOnly;
}
/**
 * UNDOCUMENTED.
 */
export interface EmitterShapeCustomComponentFor1100 {
  direction?: Direction1;
  offset?: Offset1;
}
/**
 * UNDOCUMENTED.
 */
export interface EmitterShapeDiscComponentFor1100 {
  direction?: Direction2;
  radius?: MolangNumber30;
  offset?: Offset2;
  plane_normal?: PlaneNormal;
  surface_only?: SurfaceOnly1;
}
/**
 * UNDOCUMENTED.
 */
export interface EmitterShapeEntityAabbComponentFor1100 {
  direction?: Direction3;
  offset?: Offset3;
}
/**
 * UNDOCUMENTED.
 */
export interface EmitterShapePointComponentFor1100 {
  direction?: Direction4;
  offset?: Offset4;
}
/**
 * UNDOCUMENTED.
 */
export interface EmitterShapeSphereComponentFor1100 {
  direction?: Direction5;
  offset?: Offset5;
  radius?: MolangNumber55;
  surface_only?: SurfaceOnly2;
}
/**
 * UNDOCUMENTED.
 */
export interface ParticleAppearanceBillboardComponentFor1100 {
  size?: Size;
  facing_camera_mode?: FacingCameraMode;
  /**
   * UNDOCUMENTED
   */
  direction?: {
    /**
     * Specified how to calculate the billboard direction of a particle.
     */
    mode?: "custom" | "derive_from_velocity";
    /**
     * The facing direction of emitted particles.
     *
     * @minItems 3
     * @maxItems 3
     */
    custom_direction?: [MolangNumber57, MolangNumber57, MolangNumber57];
    /**
     * The direction is set if the speed of the particle is above the threshold.
     */
    min_speed_threshold?: number;
    [k: string]: unknown;
  };
  uv?: Uv;
}
/**
 * UNDOCUMENTED: uv.
 */
export interface Uv {
  texture_width?: TextureWidth;
  texture_height?: TextureHeight;
  flipbook?: Flipbook;
  uv?: Uv1;
  uv_size?: UvSize;
}
/**
 * UNDOCUMENTED: flipbook.
 */
export interface Flipbook {
  base_UV?: BaseUV;
  size_UV?: SizeUV;
  step_UV?: StepUV;
  frames_per_second?: MolangNumber61;
  max_frame: MolangNumber62;
  stretch_to_lifetime?: StretchToLifetime;
  loop?: Loop;
}
/**
 * Color fields are special, they can be either an RGB, or a `#RRGGBB` field (or RGBA or `AARRGGBB`).  If RGB(A), the channels are from 0 to 1.  If the string `#AARRGGBB`, then the values are hex from 00 to ff.
 */
export interface ParticleAppearanceTintingComponentFor1100 {
  color?: Color;
}
/**
 * UNDOCUMENTED.
 */
export interface ParticleAppearanceLightingComponentFor1100 {}
/**
 * UNDOCUMENTED.
 */
export interface ParticleInitializationComponentFor1100 {
  per_update_expression?: MolangNumber66;
  per_render_expression?: MolangNumber67;
}
/**
 * Starts the particle with a specified orientation and rotation rate.
 */
export interface ParticleInitialSpinComponentFor1100 {
  rotation?: MolangNumber71;
  rotation_rate?: MolangNumber72;
}
/**
 * UNDOCUMENTED:.
 */
export interface ParticleLifetimeExpressionComponentFor1100 {
  expiration_expression?: MolangNumber73;
  max_lifetime?: MolangNumber74;
}
/**
 * UNDOCUMENTED.
 */
export interface ParticleLifetimeEventsComponentFor1100 {
  creation_event?: CreationEvent1;
  custom_events?: CustomEvents;
  expiration_event?: ExpirationEvent1;
  timeline?: Timeline1;
}
/**
 * UNDOCUMENTED, unclear structure :(.
 */
export interface CustomEvents {
  [k: string]: unknown;
}
/**
 * UNDOCUMENTED: timeline.
 */
export interface Timeline1 {
  [k: string]: unknown;
}
/**
 * UNDOCUMENTED.
 */
export interface ParticleMotionCollisionComponentFor1100 {
  collision_drag?: CollisionDrag;
  coefficient_of_restitution?: CoefficientOfRestitution;
  collision_radius?: CollisionRadius;
  enabled?: MolangNumber79;
  expire_on_contact?: ExpireOnContact;
  events?: Events;
}
/**
 * UNDOCUMENTED: events.
 */
export interface Events1 {
  additionalProperties?: never;
  event?: Event;
  min_speed?: MinimumSpeed;
  [k: string]: unknown;
}
/**
 * This component specifies the dynamic properties of the particle, from a simulation standpoint what forces act upon the particle? These dynamics alter the velocity of the particle, which is a combination of the direction of the particle and the speed. Particle direction will always be in the direction of the velocity of the particle.
 */
export interface ParticleMotionDynamicComponentFor1100 {
  linear_acceleration?: LinearAcceleration;
  linear_drag_coefficient?: MolangNumber80;
  rotation_acceleration?: MolangNumber81;
  rotation_drag_coefficient?: MolangNumber82;
}
/**
 * UNDOCUMENTED.
 */
export interface ParticleMotionParametricComponentFor1100 {
  relative_position?: RelativePosition;
  rotation?: MolangNumber84;
  direction?: Direction6;
}
/**
 * UNDOCUMENTED: events.
 */
export interface Events2 {
  [k: string]: Event1;
}
/**
 * UNDOCUMENTED.
 */
export interface Event1 {
  particle_effect?: ParticleEffect1;
  sound_effect?: SoundEffect;
}
/**
 * UNDOCUMENTED.
 */
export interface ParticleEffect1 {
  effect?: Effect;
  type?: Type1;
  [k: string]: unknown;
}
/**
 * UNDOCUMENTED.
 */
export interface SoundEffect {
  event_name?: EventName;
  [k: string]: unknown;
}
