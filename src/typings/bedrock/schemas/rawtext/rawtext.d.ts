/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The key to translate.
 */
export type Translate1 = string;
/**
 * Specifies for the translator that additional text component needs to be inserted, this will cause the translator to look for variables in the translation text and replaced them with the corresponding 'With' text component.
 */
export type With = (string | Rawtext1)[];
/**
 * The text to display.
 */
export type Text1 = string;
/**
 * The selector to target, for dialogue files, you can use @initiator.
 */
export type Selector1 = string;
/**
 * A selector, player name (can be fake), or * to target who is reading the message.
 */
export type Selector2 = string;
/**
 * The scoreboard objective to retrieve the value of.
 */
export type Objective = string;
/**
 * The raw text component, which consists of an array of text components.
 */
export type Rawtext = (string | Translate | Text | Selector | Score)[];

/**
 * A json structure that allows for translations, or go from scores and selectors to text.
 */
export interface RawText {
  rawtext: Rawtext;
}
/**
 * A text component that will attempt to translate the given key through the languages files.
 */
export interface Translate {
  translate: Translate1;
  with?: With;
}
/**
 * Specifies that this 'with' component needs to be processed.
 */
export interface Rawtext1 {
  rawtext?: Rawtext;
}
/**
 * A simple text component, will display the text raw (without processing).
 */
export interface Text {
  text: Text1;
}
/**
 * A text component that turns a selector into text, will usually display like: `Player1, Player2 and Player3`.
 */
export interface Selector {
  selector: Selector1;
}
/**
 * A text component that grabs the score from an given target and turns its value of a specified score.
 */
export interface Score {
  score: Score1;
}
/**
 * The score text component.
 */
export interface Score1 {
  name: Selector2;
  objective: Objective;
}
