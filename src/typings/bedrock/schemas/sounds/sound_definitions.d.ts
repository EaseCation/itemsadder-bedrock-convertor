/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * A version that tells minecraft what type of data format can be expected when reading this file.
 */
export type FormatVersion = string;
/**
 * Whenever or not use legacy distance checking.
 */
export type UseLegacyMaxDistance = boolean;
/**
 * The category this sound belongs to, for the user to control the volume on.
 */
export type SoundCategory =
  | "ambient"
  | "block"
  | "music"
  | "weather"
  | "ui"
  | "bucket"
  | "neutral"
  | "player"
  | "hostile"
  | "record"
  | "bottle";
/**
 * UNDOCUMENTED: sounds.
 */
export type Sounds1 = SoundFilepathSchema | Sounds2;
/**
 * The filepath to the sound, starts with `sounds/'.
 */
export type SoundFilepathSchema = string;
/**
 * UNDOCUMENTED.
 */
export type Is3D = boolean;
/**
 * The pitch of the audio, 1 is nomial.
 */
export type Pitch = number;
/**
 * The volume of the audio, 1 is nomial.
 */
export type Volume = number;
/**
 * Marks if this audio should be loaded or not on low memory.
 */
export type LoadOnLowMemory = boolean;
/**
 * If marked true then minecraft will stream the audio.
 */
export type Stream = boolean;
/**
 * UNDOCUMENTED: name.
 */
export type Name = string;
/**
 * UNDOCUMENTED.
 */
export type Weight = number;
/**
 * The collection of sounds minecraft can choice from.
 */
export type Sounds = Sounds1[];
/**
 * UNDOCUMENTED.
 */
export type MaxDistance = number | null;
/**
 * UNDOCUMENTED.
 */
export type MinDistance = number | null;
/**
 * UNDOCUMENTED: use legacy Maximum distance.
 */
export type UseLegacyMaximumDistance = "true" | "false";

/**
 * The collection of sound definitions this resourcepack has defined.
 */
export interface SoundDefinitions {
  format_version?: FormatVersion;
  sound_definitions?: SoundDefinitions1;
  __use_legacy_max_distance?: UseLegacyMaximumDistance;
}
/**
 * UNDOCUMENTED: sound definitions.
 */
export interface SoundDefinitions1 {
  [k: string]: Sound;
}
export interface Sound {
  __use_legacy_max_distance?: UseLegacyMaxDistance;
  category?: SoundCategory;
  sounds: Sounds;
  max_distance?: MaxDistance;
  min_distance?: MinDistance;
}
/**
 * A collection of sounds to choice from.
 */
export interface Sounds2 {
  is3D?: Is3D;
  pitch?: Pitch;
  volume?: Volume;
  load_on_low_memory?: LoadOnLowMemory;
  stream?: Stream;
  name: Name;
  weight?: Weight;
}
