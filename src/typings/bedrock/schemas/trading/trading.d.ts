/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * A version that tells minecraft what type of data format can be expected when reading this file.
 */
export type FormatVersion = string;
export type Give =
  | string
  | {
      item?: ItemIdentifier;
      quantity?: Quantity;
      functions?: Functions;
      choice?: Choice;
    };
export type ItemIdentifier = string;
export type Quantity =
  | Amount
  | {
      min: Minimum;
      max: Maximum;
    };
export type Amount = number;
export type Minimum = number;
export type Maximum = number;
/**
 * A minecraft loot table condition.
 */
export type Functions1 = Functions2 & Functions3;
export type Functions2 = {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
};
/**
 * UNDOCUMENTED.
 */
export type Add = boolean;
export type Functions = Functions1[];
export type Item =
  | string
  | {
      item?: ItemIdentifier1;
      price_multiplier?: PriceMultiplier;
      functions?: Functions;
      biomes?: Biomes;
      quantity?: Quantity1;
    };
export type ItemIdentifier1 = string;
export type PriceMultiplier = number;
/**
 * UNDOCUMENTED.
 */
export type BiomeName =
  | "animal"
  | "beach"
  | "birch"
  | "cold"
  | "dark_oak"
  | "deep"
  | "desert"
  | "edge"
  | "extreme_hills"
  | "flower_forest"
  | "forest"
  | "frozen"
  | "hills"
  | "ice"
  | "ice_plains"
  | "jungle"
  | "lakes"
  | "lukewarm"
  | "mega"
  | "mesa"
  | "monster"
  | "mooshroom_island"
  | "mountain"
  | "mutated"
  | "nether"
  | "ocean"
  | "plains"
  | "plateau"
  | "river"
  | "roofed"
  | "savanna"
  | "shore"
  | "stone"
  | "swamp"
  | "taiga"
  | "the_end"
  | "warm";
/**
 * UNDOCUMENTED.
 */
export type Biomes = BiomeName[];
export type Quantity1 =
  | Amount1
  | {
      min: Minimum1;
      max: Maximum1;
    };
export type Amount1 = number;
export type Minimum1 = number;
export type Maximum1 = number;
/**
 * UNDOCUMENTED.
 */
export type Choice = Item[];
export type Gives = Give[];
export type Want =
  | string
  | {
      item?: ItemIdentifier2;
      quantity?: Quantity2;
      price_multiplier?: PriceMultiplier1;
      functions?: Functions;
      choice?: Choice1;
    };
export type ItemIdentifier2 = string;
export type Quantity2 =
  | Amount2
  | {
      min: Minimum2;
      max: Maximum2;
    };
export type Amount2 = number;
export type Minimum2 = number;
export type Maximum2 = number;
/**
 * UNDOCUMENTED.
 */
export type PriceMultiplier1 = number;
/**
 * UNDOCUMENTED.
 */
export type Choice1 = Item[];
export type Wants = Want[];
export type TraderExperience = number;
export type MaximumUses = number;
export type Weight = number;
export type RewardExperience = boolean;
export type Trades = Trade[];
export type TotalExperienceRequired = number;
export type NumberToSelect = number;
/**
 * A collection of groups.
 */
export type Groups = Group[];
/**
 * A collection of tiers.
 */
export type Tiers = Tier[];

/**
 * UNDOCUMENTED.
 */
export interface Trading {
  format_version?: FormatVersion;
  tiers?: Tiers;
}
export interface Tier {
  trades?: Trades;
  total_exp_required?: TotalExperienceRequired;
  groups?: Groups;
}
export interface Trade {
  gives: Gives;
  wants: Wants;
  trader_exp?: TraderExperience;
  max_uses?: MaximumUses;
  weight?: Weight;
  reward_exp?: RewardExperience;
}
export interface Functions3 {
  function:
    | "enchant_book_for_trading"
    | "enchant_random_gear"
    | "enchant_randomly"
    | "enchant_with_levels"
    | "exploration_map"
    | "fill_container"
    | "furnace_smelt"
    | "looting_enchant"
    | "random_aux_value"
    | "random_block_state"
    | "random_dye"
    | "set_actor_id"
    | "set_banner_details"
    | "set_book_contents"
    | "set_count"
    | "set_damage"
    | "set_data_from_color_index"
    | "set_data"
    | "set_lore"
    | "set_name"
    | "specific_enchants"
    | "trader_material_type"
    | "minecraft:enchant_book_for_trading"
    | "minecraft:enchant_random_gear"
    | "minecraft:enchant_randomly"
    | "minecraft:enchant_with_levels"
    | "minecraft:exploration_map"
    | "minecraft:fill_container"
    | "minecraft:furnace_smelt"
    | "minecraft:looting_enchant"
    | "minecraft:random_aux_value"
    | "minecraft:random_block_state"
    | "minecraft:random_dye"
    | "minecraft:set_actor_id"
    | "minecraft:set_banner_details"
    | "minecraft:set_book_contents"
    | "minecraft:set_count"
    | "minecraft:set_damage"
    | "minecraft:set_data_from_color_index"
    | "minecraft:set_data"
    | "minecraft:set_lore"
    | "minecraft:set_name"
    | "minecraft:specific_enchants"
    | "minecraft:trader_material_type";
  add?: Add;
  [k: string]: unknown;
}
export interface Group {
  num_to_select?: NumberToSelect;
  trades?: Trades;
}
