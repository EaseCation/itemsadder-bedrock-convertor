/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The factory that will be used to create the element.
 */
export type Factory =
  | {
      control_ids?: ControlIDs;
      control_name?: ControlName;
      factory_variables?: FactoryVariables;
      name?: Name;
      [k: string]: VariableDefinition;
    }
  | (ElementReference | ElementReference1 | VariableReference3);
/**
 * The IDs of the controls that will be created by the factory.
 */
export type ControlIDs =
  | string
  | {
      [k: string]: ControlID;
    };
export type ControlID = string;
/**
 * The name of the control that will be created by the factory.
 */
export type ControlName = string | ((ElementReference | ElementReference1 | VariableReference) & string);
/**
 * A reference to an element: using the following syntax: [element_name]@[namespace_reference].[element_name_reference]
 */
export type ElementReference = string;
/**
 * A reference to an element: using the following syntax: [namespace_reference].[element_name_reference]
 */
export type ElementReference1 = string;
/**
 * A variable is a reference to a value that can be used in the UI.
 */
export type VariableReference = VariableReference1 & VariableReference2;
export type VariableReference1 = {
  [k: string]: unknown;
};
export type VariableReference2 = string;
/**
 * The variables that will be used by the factory.
 */
export type FactoryVariables = FactoryVariable[] | string;
export type FactoryVariable = string;
/**
 * The name of the factory.
 */
export type Name = string;
export type VariableReference3 = VariableReference1 & VariableReference2;

/**
 * A variable is a reference to a value that can be used in the UI.
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^\$.*".
 */
export interface VariableDefinition {
  [k: string]: unknown;
}
